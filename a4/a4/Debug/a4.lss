
a4.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000000e  00800200  000009ba  00000a4e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000009ba  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000016  0080020e  0080020e  00000a5c  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000a5c  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000ab8  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000088  00000000  00000000  00000af8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000144e  00000000  00000000  00000b80  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000e46  00000000  00000000  00001fce  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000006e7  00000000  00000000  00002e14  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000140  00000000  00000000  000034fc  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000684  00000000  00000000  0000363c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000617  00000000  00000000  00003cc0  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000068  00000000  00000000  000042d7  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	71 c0       	rjmp	.+226    	; 0xe4 <__ctors_end>
   2:	00 00       	nop
   4:	8e c0       	rjmp	.+284    	; 0x122 <__bad_interrupt>
   6:	00 00       	nop
   8:	8c c0       	rjmp	.+280    	; 0x122 <__bad_interrupt>
   a:	00 00       	nop
   c:	8a c0       	rjmp	.+276    	; 0x122 <__bad_interrupt>
   e:	00 00       	nop
  10:	88 c0       	rjmp	.+272    	; 0x122 <__bad_interrupt>
  12:	00 00       	nop
  14:	86 c0       	rjmp	.+268    	; 0x122 <__bad_interrupt>
  16:	00 00       	nop
  18:	84 c0       	rjmp	.+264    	; 0x122 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	82 c0       	rjmp	.+260    	; 0x122 <__bad_interrupt>
  1e:	00 00       	nop
  20:	80 c0       	rjmp	.+256    	; 0x122 <__bad_interrupt>
  22:	00 00       	nop
  24:	7e c0       	rjmp	.+252    	; 0x122 <__bad_interrupt>
  26:	00 00       	nop
  28:	7c c0       	rjmp	.+248    	; 0x122 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	7a c0       	rjmp	.+244    	; 0x122 <__bad_interrupt>
  2e:	00 00       	nop
  30:	78 c0       	rjmp	.+240    	; 0x122 <__bad_interrupt>
  32:	00 00       	nop
  34:	76 c0       	rjmp	.+236    	; 0x122 <__bad_interrupt>
  36:	00 00       	nop
  38:	74 c0       	rjmp	.+232    	; 0x122 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	72 c0       	rjmp	.+228    	; 0x122 <__bad_interrupt>
  3e:	00 00       	nop
  40:	70 c0       	rjmp	.+224    	; 0x122 <__bad_interrupt>
  42:	00 00       	nop
  44:	c3 c1       	rjmp	.+902    	; 0x3cc <__vector_17>
  46:	00 00       	nop
  48:	6c c0       	rjmp	.+216    	; 0x122 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	6a c0       	rjmp	.+212    	; 0x122 <__bad_interrupt>
  4e:	00 00       	nop
  50:	68 c0       	rjmp	.+208    	; 0x122 <__bad_interrupt>
  52:	00 00       	nop
  54:	66 c0       	rjmp	.+204    	; 0x122 <__bad_interrupt>
  56:	00 00       	nop
  58:	64 c0       	rjmp	.+200    	; 0x122 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	62 c0       	rjmp	.+196    	; 0x122 <__bad_interrupt>
  5e:	00 00       	nop
  60:	60 c0       	rjmp	.+192    	; 0x122 <__bad_interrupt>
  62:	00 00       	nop
  64:	5e c0       	rjmp	.+188    	; 0x122 <__bad_interrupt>
  66:	00 00       	nop
  68:	5c c0       	rjmp	.+184    	; 0x122 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	5a c0       	rjmp	.+180    	; 0x122 <__bad_interrupt>
  6e:	00 00       	nop
  70:	58 c0       	rjmp	.+176    	; 0x122 <__bad_interrupt>
  72:	00 00       	nop
  74:	56 c0       	rjmp	.+172    	; 0x122 <__bad_interrupt>
  76:	00 00       	nop
  78:	54 c0       	rjmp	.+168    	; 0x122 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	52 c0       	rjmp	.+164    	; 0x122 <__bad_interrupt>
  7e:	00 00       	nop
  80:	50 c0       	rjmp	.+160    	; 0x122 <__bad_interrupt>
  82:	00 00       	nop
  84:	4e c0       	rjmp	.+156    	; 0x122 <__bad_interrupt>
  86:	00 00       	nop
  88:	4c c0       	rjmp	.+152    	; 0x122 <__bad_interrupt>
  8a:	00 00       	nop
  8c:	4a c0       	rjmp	.+148    	; 0x122 <__bad_interrupt>
  8e:	00 00       	nop
  90:	48 c0       	rjmp	.+144    	; 0x122 <__bad_interrupt>
  92:	00 00       	nop
  94:	46 c0       	rjmp	.+140    	; 0x122 <__bad_interrupt>
  96:	00 00       	nop
  98:	44 c0       	rjmp	.+136    	; 0x122 <__bad_interrupt>
  9a:	00 00       	nop
  9c:	42 c0       	rjmp	.+132    	; 0x122 <__bad_interrupt>
  9e:	00 00       	nop
  a0:	40 c0       	rjmp	.+128    	; 0x122 <__bad_interrupt>
  a2:	00 00       	nop
  a4:	3e c0       	rjmp	.+124    	; 0x122 <__bad_interrupt>
  a6:	00 00       	nop
  a8:	3c c0       	rjmp	.+120    	; 0x122 <__bad_interrupt>
  aa:	00 00       	nop
  ac:	3a c0       	rjmp	.+116    	; 0x122 <__bad_interrupt>
  ae:	00 00       	nop
  b0:	38 c0       	rjmp	.+112    	; 0x122 <__bad_interrupt>
  b2:	00 00       	nop
  b4:	36 c0       	rjmp	.+108    	; 0x122 <__bad_interrupt>
  b6:	00 00       	nop
  b8:	34 c0       	rjmp	.+104    	; 0x122 <__bad_interrupt>
  ba:	00 00       	nop
  bc:	32 c0       	rjmp	.+100    	; 0x122 <__bad_interrupt>
  be:	00 00       	nop
  c0:	30 c0       	rjmp	.+96     	; 0x122 <__bad_interrupt>
  c2:	00 00       	nop
  c4:	2e c0       	rjmp	.+92     	; 0x122 <__bad_interrupt>
  c6:	00 00       	nop
  c8:	2c c0       	rjmp	.+88     	; 0x122 <__bad_interrupt>
  ca:	00 00       	nop
  cc:	2a c0       	rjmp	.+84     	; 0x122 <__bad_interrupt>
  ce:	00 00       	nop
  d0:	28 c0       	rjmp	.+80     	; 0x122 <__bad_interrupt>
  d2:	00 00       	nop
  d4:	26 c0       	rjmp	.+76     	; 0x122 <__bad_interrupt>
  d6:	00 00       	nop
  d8:	24 c0       	rjmp	.+72     	; 0x122 <__bad_interrupt>
  da:	00 00       	nop
  dc:	22 c0       	rjmp	.+68     	; 0x122 <__bad_interrupt>
  de:	00 00       	nop
  e0:	20 c0       	rjmp	.+64     	; 0x122 <__bad_interrupt>
	...

000000e4 <__ctors_end>:
  e4:	11 24       	eor	r1, r1
  e6:	1f be       	out	0x3f, r1	; 63
  e8:	cf ef       	ldi	r28, 0xFF	; 255
  ea:	d1 e2       	ldi	r29, 0x21	; 33
  ec:	de bf       	out	0x3e, r29	; 62
  ee:	cd bf       	out	0x3d, r28	; 61
  f0:	00 e0       	ldi	r16, 0x00	; 0
  f2:	0c bf       	out	0x3c, r16	; 60

000000f4 <__do_copy_data>:
  f4:	12 e0       	ldi	r17, 0x02	; 2
  f6:	a0 e0       	ldi	r26, 0x00	; 0
  f8:	b2 e0       	ldi	r27, 0x02	; 2
  fa:	ea eb       	ldi	r30, 0xBA	; 186
  fc:	f9 e0       	ldi	r31, 0x09	; 9
  fe:	00 e0       	ldi	r16, 0x00	; 0
 100:	0b bf       	out	0x3b, r16	; 59
 102:	02 c0       	rjmp	.+4      	; 0x108 <__do_copy_data+0x14>
 104:	07 90       	elpm	r0, Z+
 106:	0d 92       	st	X+, r0
 108:	ae 30       	cpi	r26, 0x0E	; 14
 10a:	b1 07       	cpc	r27, r17
 10c:	d9 f7       	brne	.-10     	; 0x104 <__do_copy_data+0x10>

0000010e <__do_clear_bss>:
 10e:	22 e0       	ldi	r18, 0x02	; 2
 110:	ae e0       	ldi	r26, 0x0E	; 14
 112:	b2 e0       	ldi	r27, 0x02	; 2
 114:	01 c0       	rjmp	.+2      	; 0x118 <.do_clear_bss_start>

00000116 <.do_clear_bss_loop>:
 116:	1d 92       	st	X+, r1

00000118 <.do_clear_bss_start>:
 118:	a4 32       	cpi	r26, 0x24	; 36
 11a:	b2 07       	cpc	r27, r18
 11c:	e1 f7       	brne	.-8      	; 0x116 <.do_clear_bss_loop>
 11e:	22 d1       	rcall	.+580    	; 0x364 <main>
 120:	4a c4       	rjmp	.+2196   	; 0x9b6 <_exit>

00000122 <__bad_interrupt>:
 122:	6e cf       	rjmp	.-292    	; 0x0 <__vectors>

00000124 <lcd_nibble>:

void lcd_blank( uint8_t len )                   // blank n digits
{
  while( len-- )
    lcd_putchar( ' ' );
}
 124:	e2 e0       	ldi	r30, 0x02	; 2
 126:	f1 e0       	ldi	r31, 0x01	; 1
 128:	90 81       	ld	r25, Z
 12a:	9f 7e       	andi	r25, 0xEF	; 239
 12c:	90 83       	st	Z, r25
 12e:	88 23       	and	r24, r24
 130:	1c f4       	brge	.+6      	; 0x138 <lcd_nibble+0x14>
 132:	90 81       	ld	r25, Z
 134:	90 61       	ori	r25, 0x10	; 16
 136:	90 83       	st	Z, r25
 138:	e2 e0       	ldi	r30, 0x02	; 2
 13a:	f1 e0       	ldi	r31, 0x01	; 1
 13c:	90 81       	ld	r25, Z
 13e:	97 7f       	andi	r25, 0xF7	; 247
 140:	90 83       	st	Z, r25
 142:	86 ff       	sbrs	r24, 6
 144:	03 c0       	rjmp	.+6      	; 0x14c <lcd_nibble+0x28>
 146:	90 81       	ld	r25, Z
 148:	98 60       	ori	r25, 0x08	; 8
 14a:	90 83       	st	Z, r25
 14c:	9e b1       	in	r25, 0x0e	; 14
 14e:	97 7f       	andi	r25, 0xF7	; 247
 150:	9e b9       	out	0x0e, r25	; 14
 152:	85 ff       	sbrs	r24, 5
 154:	03 c0       	rjmp	.+6      	; 0x15c <lcd_nibble+0x38>
 156:	9e b1       	in	r25, 0x0e	; 14
 158:	98 60       	ori	r25, 0x08	; 8
 15a:	9e b9       	out	0x0e, r25	; 14
 15c:	94 b3       	in	r25, 0x14	; 20
 15e:	9f 7d       	andi	r25, 0xDF	; 223
 160:	94 bb       	out	0x14, r25	; 20
 162:	84 ff       	sbrs	r24, 4
 164:	03 c0       	rjmp	.+6      	; 0x16c <lcd_nibble+0x48>
 166:	84 b3       	in	r24, 0x14	; 20
 168:	80 62       	ori	r24, 0x20	; 32
 16a:	84 bb       	out	0x14, r24	; 20
 16c:	e2 e0       	ldi	r30, 0x02	; 2
 16e:	f1 e0       	ldi	r31, 0x01	; 1
 170:	80 81       	ld	r24, Z
 172:	80 64       	ori	r24, 0x40	; 64
 174:	80 83       	st	Z, r24
 176:	85 e0       	ldi	r24, 0x05	; 5
 178:	8a 95       	dec	r24
 17a:	f1 f7       	brne	.-4      	; 0x178 <lcd_nibble+0x54>
 17c:	00 00       	nop
 17e:	80 81       	ld	r24, Z
 180:	8f 7b       	andi	r24, 0xBF	; 191
 182:	80 83       	st	Z, r24
 184:	08 95       	ret

00000186 <lcd_byte>:
 186:	cf 93       	push	r28
 188:	c8 2f       	mov	r28, r24
 18a:	cc df       	rcall	.-104    	; 0x124 <lcd_nibble>
 18c:	8c 2f       	mov	r24, r28
 18e:	82 95       	swap	r24
 190:	80 7f       	andi	r24, 0xF0	; 240
 192:	c8 df       	rcall	.-112    	; 0x124 <lcd_nibble>
 194:	87 ec       	ldi	r24, 0xC7	; 199
 196:	90 e0       	ldi	r25, 0x00	; 0
 198:	01 97       	sbiw	r24, 0x01	; 1
 19a:	f1 f7       	brne	.-4      	; 0x198 <lcd_byte+0x12>
 19c:	00 c0       	rjmp	.+0      	; 0x19e <lcd_byte+0x18>
 19e:	00 00       	nop
 1a0:	cf 91       	pop	r28
 1a2:	08 95       	ret

000001a4 <lcd_command>:
 1a4:	cf 93       	push	r28
 1a6:	c8 2f       	mov	r28, r24
 1a8:	e2 e0       	ldi	r30, 0x02	; 2
 1aa:	f1 e0       	ldi	r31, 0x01	; 1
 1ac:	80 81       	ld	r24, Z
 1ae:	8f 7d       	andi	r24, 0xDF	; 223
 1b0:	80 83       	st	Z, r24
 1b2:	8c 2f       	mov	r24, r28
 1b4:	e8 df       	rcall	.-48     	; 0x186 <lcd_byte>
 1b6:	c4 30       	cpi	r28, 0x04	; 4
 1b8:	18 f0       	brcs	.+6      	; 0x1c0 <lcd_command+0x1c>
 1ba:	c0 38       	cpi	r28, 0x80	; 128
 1bc:	50 f0       	brcs	.+20     	; 0x1d2 <lcd_command+0x2e>
 1be:	07 c0       	rjmp	.+14     	; 0x1ce <lcd_command+0x2a>
 1c0:	8f e3       	ldi	r24, 0x3F	; 63
 1c2:	9f e1       	ldi	r25, 0x1F	; 31
 1c4:	01 97       	sbiw	r24, 0x01	; 1
 1c6:	f1 f7       	brne	.-4      	; 0x1c4 <lcd_command+0x20>
 1c8:	00 c0       	rjmp	.+0      	; 0x1ca <lcd_command+0x26>
 1ca:	00 00       	nop
 1cc:	c0 e8       	ldi	r28, 0x80	; 128
 1ce:	c0 93 00 02 	sts	0x0200, r28	; 0x800200 <__DATA_REGION_ORIGIN__>
 1d2:	cf 91       	pop	r28
 1d4:	08 95       	ret

000001d6 <lcd_putchar>:
 1d6:	e2 e0       	ldi	r30, 0x02	; 2
 1d8:	f1 e0       	ldi	r31, 0x01	; 1
 1da:	90 81       	ld	r25, Z
 1dc:	90 62       	ori	r25, 0x20	; 32
 1de:	90 83       	st	Z, r25
 1e0:	d2 df       	rcall	.-92     	; 0x186 <lcd_byte>
 1e2:	80 91 00 02 	lds	r24, 0x0200	; 0x800200 <__DATA_REGION_ORIGIN__>
 1e6:	8f 5f       	subi	r24, 0xFF	; 255
 1e8:	80 93 00 02 	sts	0x0200, r24	; 0x800200 <__DATA_REGION_ORIGIN__>
 1ec:	80 39       	cpi	r24, 0x90	; 144
 1ee:	19 f0       	breq	.+6      	; 0x1f6 <lcd_putchar+0x20>
 1f0:	80 3d       	cpi	r24, 0xD0	; 208
 1f2:	19 f0       	breq	.+6      	; 0x1fa <lcd_putchar+0x24>
 1f4:	08 95       	ret
 1f6:	80 ec       	ldi	r24, 0xC0	; 192
 1f8:	01 c0       	rjmp	.+2      	; 0x1fc <lcd_putchar+0x26>
 1fa:	80 e8       	ldi	r24, 0x80	; 128
 1fc:	d3 cf       	rjmp	.-90     	; 0x1a4 <lcd_command>
 1fe:	08 95       	ret

00000200 <lcd_puts>:
 200:	cf 93       	push	r28
 202:	df 93       	push	r29
 204:	ec 01       	movw	r28, r24
 206:	02 c0       	rjmp	.+4      	; 0x20c <lcd_puts+0xc>
 208:	e6 df       	rcall	.-52     	; 0x1d6 <lcd_putchar>
 20a:	21 96       	adiw	r28, 0x01	; 1
 20c:	88 81       	ld	r24, Y
 20e:	81 11       	cpse	r24, r1
 210:	fb cf       	rjmp	.-10     	; 0x208 <lcd_puts+0x8>
 212:	df 91       	pop	r29
 214:	cf 91       	pop	r28
 216:	08 95       	ret

00000218 <lcd_init>:


void lcd_init( void )
{
  LCD_DDR_D4 = 1;                               // enable output pins
 218:	83 b3       	in	r24, 0x13	; 19
 21a:	80 62       	ori	r24, 0x20	; 32
 21c:	83 bb       	out	0x13, r24	; 19
  LCD_DDR_D5 = 1;
 21e:	8d b1       	in	r24, 0x0d	; 13
 220:	88 60       	ori	r24, 0x08	; 8
 222:	8d b9       	out	0x0d, r24	; 13
  LCD_DDR_D6 = 1;
 224:	e1 e0       	ldi	r30, 0x01	; 1
 226:	f1 e0       	ldi	r31, 0x01	; 1
 228:	80 81       	ld	r24, Z
 22a:	88 60       	ori	r24, 0x08	; 8
 22c:	80 83       	st	Z, r24
  LCD_DDR_D7 = 1;
 22e:	80 81       	ld	r24, Z
 230:	80 61       	ori	r24, 0x10	; 16
 232:	80 83       	st	Z, r24
  LCD_DDR_RS = 1;
 234:	80 81       	ld	r24, Z
 236:	80 62       	ori	r24, 0x20	; 32
 238:	80 83       	st	Z, r24
  LCD_DDR_E0 = 1;
 23a:	80 81       	ld	r24, Z
 23c:	80 64       	ori	r24, 0x40	; 64
 23e:	80 83       	st	Z, r24
  LCD_E0 = 0;
 240:	e2 e0       	ldi	r30, 0x02	; 2
 242:	f1 e0       	ldi	r31, 0x01	; 1
 244:	80 81       	ld	r24, Z
 246:	8f 7b       	andi	r24, 0xBF	; 191
 248:	80 83       	st	Z, r24
  LCD_RS = 0;                                   // send commands
 24a:	80 81       	ld	r24, Z
 24c:	8f 7d       	andi	r24, 0xDF	; 223
 24e:	80 83       	st	Z, r24
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 250:	8f e5       	ldi	r24, 0x5F	; 95
 252:	9a ee       	ldi	r25, 0xEA	; 234
 254:	01 97       	sbiw	r24, 0x01	; 1
 256:	f1 f7       	brne	.-4      	; 0x254 <lcd_init+0x3c>
 258:	00 c0       	rjmp	.+0      	; 0x25a <lcd_init+0x42>
 25a:	00 00       	nop

  _delay_ms( 15 );
  lcd_nibble( 0x30 );
 25c:	80 e3       	ldi	r24, 0x30	; 48
 25e:	62 df       	rcall	.-316    	; 0x124 <lcd_nibble>
 260:	8f e0       	ldi	r24, 0x0F	; 15
 262:	90 e4       	ldi	r25, 0x40	; 64
 264:	01 97       	sbiw	r24, 0x01	; 1
 266:	f1 f7       	brne	.-4      	; 0x264 <lcd_init+0x4c>
 268:	00 c0       	rjmp	.+0      	; 0x26a <lcd_init+0x52>
 26a:	00 00       	nop
  _delay_ms( 4.1 );
  lcd_nibble( 0x30 );
 26c:	80 e3       	ldi	r24, 0x30	; 48
 26e:	5a df       	rcall	.-332    	; 0x124 <lcd_nibble>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 270:	8f e8       	ldi	r24, 0x8F	; 143
 272:	91 e0       	ldi	r25, 0x01	; 1
 274:	01 97       	sbiw	r24, 0x01	; 1
 276:	f1 f7       	brne	.-4      	; 0x274 <lcd_init+0x5c>
 278:	00 c0       	rjmp	.+0      	; 0x27a <lcd_init+0x62>
  _delay_us( 100 );
  lcd_nibble( 0x30 );
 27a:	00 00       	nop
 27c:	80 e3       	ldi	r24, 0x30	; 48
 27e:	52 df       	rcall	.-348    	; 0x124 <lcd_nibble>
 280:	87 ec       	ldi	r24, 0xC7	; 199
 282:	90 e0       	ldi	r25, 0x00	; 0
 284:	01 97       	sbiw	r24, 0x01	; 1
 286:	f1 f7       	brne	.-4      	; 0x284 <lcd_init+0x6c>
 288:	00 c0       	rjmp	.+0      	; 0x28a <lcd_init+0x72>
  _delay_us( LCD_TIME_DAT );
  lcd_nibble( 0x20 );                           // 4 bit mode
 28a:	00 00       	nop
 28c:	80 e2       	ldi	r24, 0x20	; 32
 28e:	4a df       	rcall	.-364    	; 0x124 <lcd_nibble>
 290:	87 ec       	ldi	r24, 0xC7	; 199
 292:	90 e0       	ldi	r25, 0x00	; 0
 294:	01 97       	sbiw	r24, 0x01	; 1
 296:	f1 f7       	brne	.-4      	; 0x294 <lcd_init+0x7c>
 298:	00 c0       	rjmp	.+0      	; 0x29a <lcd_init+0x82>
  _delay_us( LCD_TIME_DAT );
#if LCD_LINE == 1
  lcd_command( 0x20 );                          // 1 line
#else
  lcd_command( 0x28 );                          // 2 lines 5*7
 29a:	00 00       	nop
 29c:	88 e2       	ldi	r24, 0x28	; 40
#endif
  lcd_command( 0x08 );                          // display off
 29e:	82 df       	rcall	.-252    	; 0x1a4 <lcd_command>
 2a0:	88 e0       	ldi	r24, 0x08	; 8
  lcd_command( 0x01 );                          // display clear
 2a2:	80 df       	rcall	.-256    	; 0x1a4 <lcd_command>
 2a4:	81 e0       	ldi	r24, 0x01	; 1
 2a6:	7e df       	rcall	.-260    	; 0x1a4 <lcd_command>
  lcd_command( 0x06 );                          // cursor increment
 2a8:	86 e0       	ldi	r24, 0x06	; 6
 2aa:	7c df       	rcall	.-264    	; 0x1a4 <lcd_command>
 2ac:	8c e0       	ldi	r24, 0x0C	; 12
  lcd_command( 0x0C );                          // on, no cursor, no blink
 2ae:	7a cf       	rjmp	.-268    	; 0x1a4 <lcd_command>
 2b0:	08 95       	ret

000002b2 <check_button>:
 *  if (adc_key_in < 555)  return btnLEFT;
 *  if (adc_key_in < 790)  return btnSELECT;*/

void check_button() {
	// start conversion
	ADCSRA |= 0x40;
 2b2:	ea e7       	ldi	r30, 0x7A	; 122
 2b4:	f0 e0       	ldi	r31, 0x00	; 0
 2b6:	80 81       	ld	r24, Z
 2b8:	80 64       	ori	r24, 0x40	; 64
 2ba:	80 83       	st	Z, r24

	// bit 6 in ADCSRA is 1 while conversion is in progress
	// 0b0100 0000
	// 0x40
	while (ADCSRA & 0x40);
 2bc:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7c007a>
 2c0:	86 fd       	sbrc	r24, 6
 2c2:	fc cf       	rjmp	.-8      	; 0x2bc <check_button+0xa>
	
	unsigned int val = ADCL;
 2c4:	20 91 78 00 	lds	r18, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7c0078>
	unsigned int val2 = ADCH;
 2c8:	80 91 79 00 	lds	r24, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7c0079>
 2cc:	90 e0       	ldi	r25, 0x00	; 0

	val += (val2 << 8);
 2ce:	98 2f       	mov	r25, r24
 2d0:	88 27       	eor	r24, r24
 2d2:	82 0f       	add	r24, r18
 2d4:	91 1d       	adc	r25, r1

	if (val > 555 && val < 790) { // btnSELECT pressed
 2d6:	8c 52       	subi	r24, 0x2C	; 44
 2d8:	92 40       	sbci	r25, 0x02	; 2
 2da:	8a 3e       	cpi	r24, 0xEA	; 234
 2dc:	91 05       	cpc	r25, r1
 2de:	c8 f4       	brcc	.+50     	; 0x312 <check_button+0x60>
		status = !status;
 2e0:	81 e0       	ldi	r24, 0x01	; 1
 2e2:	90 91 0e 02 	lds	r25, 0x020E	; 0x80020e <__data_end>
 2e6:	91 11       	cpse	r25, r1
 2e8:	80 e0       	ldi	r24, 0x00	; 0
 2ea:	80 93 0e 02 	sts	0x020E, r24	; 0x80020e <__data_end>
		
		if (!status) {
 2ee:	81 11       	cpse	r24, r1
 2f0:	10 c0       	rjmp	.+32     	; 0x312 <check_button+0x60>
			// resume/sync line2 with current time 
			hours2 = hours1;
 2f2:	80 91 16 02 	lds	r24, 0x0216	; 0x800216 <hours1>
 2f6:	80 93 12 02 	sts	0x0212, r24	; 0x800212 <hours2>
			minutes2 = minutes1;
 2fa:	80 91 15 02 	lds	r24, 0x0215	; 0x800215 <minutes1>
 2fe:	80 93 11 02 	sts	0x0211, r24	; 0x800211 <minutes2>
			seconds2 = seconds1;
 302:	80 91 14 02 	lds	r24, 0x0214	; 0x800214 <seconds1>
 306:	80 93 10 02 	sts	0x0210, r24	; 0x800210 <seconds2>
			sub_seconds2 = sub_seconds1;
 30a:	80 91 13 02 	lds	r24, 0x0213	; 0x800213 <sub_seconds1>
 30e:	80 93 0f 02 	sts	0x020F, r24	; 0x80020f <sub_seconds2>
 312:	08 95       	ret

00000314 <display_time>:
	}
	
}


void display_time(uint8_t line, uint8_t hours, uint8_t minutes, uint8_t seconds, uint8_t sub_seconds) {
 314:	0f 93       	push	r16
 316:	cf 93       	push	r28
 318:	c8 2f       	mov	r28, r24
	sprintf(current_time, "%d:%d:%d:%d", hours, minutes, seconds, sub_seconds);
 31a:	1f 92       	push	r1
 31c:	0f 93       	push	r16
 31e:	1f 92       	push	r1
 320:	2f 93       	push	r18
 322:	1f 92       	push	r1
 324:	4f 93       	push	r20
 326:	1f 92       	push	r1
 328:	6f 93       	push	r22
 32a:	81 e0       	ldi	r24, 0x01	; 1
 32c:	92 e0       	ldi	r25, 0x02	; 2
 32e:	9f 93       	push	r25
 330:	8f 93       	push	r24
 332:	87 e1       	ldi	r24, 0x17	; 23
 334:	92 e0       	ldi	r25, 0x02	; 2
 336:	9f 93       	push	r25
 338:	8f 93       	push	r24
 33a:	62 d0       	rcall	.+196    	; 0x400 <sprintf>
	lcd_xy(0, line);
 33c:	8d b7       	in	r24, 0x3d	; 61
 33e:	9e b7       	in	r25, 0x3e	; 62
 340:	0c 96       	adiw	r24, 0x0c	; 12
 342:	0f b6       	in	r0, 0x3f	; 63
 344:	f8 94       	cli
 346:	9e bf       	out	0x3e, r25	; 62
 348:	0f be       	out	0x3f, r0	; 63
 34a:	8d bf       	out	0x3d, r24	; 61
 34c:	c1 30       	cpi	r28, 0x01	; 1
 34e:	11 f4       	brne	.+4      	; 0x354 <display_time+0x40>
 350:	80 ec       	ldi	r24, 0xC0	; 192
 352:	01 c0       	rjmp	.+2      	; 0x356 <display_time+0x42>
 354:	80 e8       	ldi	r24, 0x80	; 128
 356:	26 df       	rcall	.-436    	; 0x1a4 <lcd_command>
	lcd_puts(current_time);
 358:	87 e1       	ldi	r24, 0x17	; 23
 35a:	92 e0       	ldi	r25, 0x02	; 2
 35c:	51 df       	rcall	.-350    	; 0x200 <lcd_puts>
}
 35e:	cf 91       	pop	r28
 360:	0f 91       	pop	r16
 362:	08 95       	ret

00000364 <main>:

int main( void )
{
	// ************************ TIMER1_INIT ************************ //
	// set timer1 counter initial value to 0
	TCCR1A=0;
 364:	10 92 80 00 	sts	0x0080, r1	; 0x800080 <__TEXT_REGION_LENGTH__+0x7c0080>
	// set timer1 prescaler to 64
	TCCR1B = (1 << CS11) | (1 << CS10);
 368:	83 e0       	ldi	r24, 0x03	; 3
 36a:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7c0081>
	// lots of math to get:
	// set compare value for 1/1000 second interrupts
	OCR0A = 249;
 36e:	89 ef       	ldi	r24, 0xF9	; 249
 370:	87 bd       	out	0x27, r24	; 39
	// enable timer compare match interrupt for Timer1
	TIMSK1 |=(1<<OCIE1A);
 372:	ef e6       	ldi	r30, 0x6F	; 111
 374:	f0 e0       	ldi	r31, 0x00	; 0
 376:	80 81       	ld	r24, Z
 378:	82 60       	ori	r24, 0x02	; 2
 37a:	80 83       	st	Z, r24
	// enable interrupts
	sei();
 37c:	78 94       	sei

	// ************************ BUTTON_INIT ************************ //
	// enable ADC with prescaler 128
	ADCSRA = 0x87;
 37e:	87 e8       	ldi	r24, 0x87	; 135
 380:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7c007a>
	ADMUX = 0x40;
 384:	80 e4       	ldi	r24, 0x40	; 64
 386:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x7c007c>
	
	// ************************ LCD_INIT ************************ //
	lcd_init();
 38a:	46 df       	rcall	.-372    	; 0x218 <lcd_init>
	
	for (;;)
	{
		check_button();
 38c:	92 df       	rcall	.-220    	; 0x2b2 <check_button>
 38e:	00 91 13 02 	lds	r16, 0x0213	; 0x800213 <sub_seconds1>
		display_time(0, hours1, minutes1, seconds1, sub_seconds1); // display line 1
 392:	10 e0       	ldi	r17, 0x00	; 0
 394:	20 91 14 02 	lds	r18, 0x0214	; 0x800214 <seconds1>
 398:	30 e0       	ldi	r19, 0x00	; 0
 39a:	40 91 15 02 	lds	r20, 0x0215	; 0x800215 <minutes1>
 39e:	50 e0       	ldi	r21, 0x00	; 0
 3a0:	60 91 16 02 	lds	r22, 0x0216	; 0x800216 <hours1>
 3a4:	70 e0       	ldi	r23, 0x00	; 0
 3a6:	80 e0       	ldi	r24, 0x00	; 0
 3a8:	90 e0       	ldi	r25, 0x00	; 0
 3aa:	b4 df       	rcall	.-152    	; 0x314 <display_time>
 3ac:	00 91 0f 02 	lds	r16, 0x020F	; 0x80020f <sub_seconds2>
		display_time(1, hours2, minutes2, seconds2, sub_seconds2); // display line 2
 3b0:	10 e0       	ldi	r17, 0x00	; 0
 3b2:	20 91 10 02 	lds	r18, 0x0210	; 0x800210 <seconds2>
 3b6:	30 e0       	ldi	r19, 0x00	; 0
 3b8:	40 91 11 02 	lds	r20, 0x0211	; 0x800211 <minutes2>
 3bc:	50 e0       	ldi	r21, 0x00	; 0
 3be:	60 91 12 02 	lds	r22, 0x0212	; 0x800212 <hours2>
 3c2:	70 e0       	ldi	r23, 0x00	; 0
 3c4:	81 e0       	ldi	r24, 0x01	; 1
 3c6:	90 e0       	ldi	r25, 0x00	; 0
 3c8:	a5 df       	rcall	.-182    	; 0x314 <display_time>
 3ca:	e0 cf       	rjmp	.-64     	; 0x38c <main+0x28>

000003cc <__vector_17>:
 3cc:	1f 92       	push	r1
}

// *********************TIM1_COMPA_vect** Interrupt Routines *********************** //
// timer1 compare match event A interrupt
ISR(TIMER1_COMPA_vect)
{
 3ce:	0f 92       	push	r0
 3d0:	0f b6       	in	r0, 0x3f	; 63
 3d2:	0f 92       	push	r0
 3d4:	11 24       	eor	r1, r1
 3d6:	8f 93       	push	r24
	sub_seconds1++;
 3d8:	80 91 13 02 	lds	r24, 0x0213	; 0x800213 <sub_seconds1>
 3dc:	8f 5f       	subi	r24, 0xFF	; 255
 3de:	80 93 13 02 	sts	0x0213, r24	; 0x800213 <sub_seconds1>
					hours1 = 0;
				}
			}
		}
	}
	if (!status) {
 3e2:	80 91 0e 02 	lds	r24, 0x020E	; 0x80020e <__data_end>
 3e6:	81 11       	cpse	r24, r1
 3e8:	05 c0       	rjmp	.+10     	; 0x3f4 <__vector_17+0x28>
		sub_seconds2++;
 3ea:	80 91 0f 02 	lds	r24, 0x020F	; 0x80020f <sub_seconds2>
 3ee:	8f 5f       	subi	r24, 0xFF	; 255
 3f0:	80 93 0f 02 	sts	0x020F, r24	; 0x80020f <sub_seconds2>
					}
				}
			}
		}
	}
}
 3f4:	8f 91       	pop	r24
 3f6:	0f 90       	pop	r0
 3f8:	0f be       	out	0x3f, r0	; 63
 3fa:	0f 90       	pop	r0
 3fc:	1f 90       	pop	r1
 3fe:	18 95       	reti

00000400 <sprintf>:
 400:	0f 93       	push	r16
 402:	1f 93       	push	r17
 404:	cf 93       	push	r28
 406:	df 93       	push	r29
 408:	cd b7       	in	r28, 0x3d	; 61
 40a:	de b7       	in	r29, 0x3e	; 62
 40c:	2e 97       	sbiw	r28, 0x0e	; 14
 40e:	0f b6       	in	r0, 0x3f	; 63
 410:	f8 94       	cli
 412:	de bf       	out	0x3e, r29	; 62
 414:	0f be       	out	0x3f, r0	; 63
 416:	cd bf       	out	0x3d, r28	; 61
 418:	0e 89       	ldd	r16, Y+22	; 0x16
 41a:	1f 89       	ldd	r17, Y+23	; 0x17
 41c:	86 e0       	ldi	r24, 0x06	; 6
 41e:	8c 83       	std	Y+4, r24	; 0x04
 420:	1a 83       	std	Y+2, r17	; 0x02
 422:	09 83       	std	Y+1, r16	; 0x01
 424:	8f ef       	ldi	r24, 0xFF	; 255
 426:	9f e7       	ldi	r25, 0x7F	; 127
 428:	9e 83       	std	Y+6, r25	; 0x06
 42a:	8d 83       	std	Y+5, r24	; 0x05
 42c:	ae 01       	movw	r20, r28
 42e:	46 5e       	subi	r20, 0xE6	; 230
 430:	5f 4f       	sbci	r21, 0xFF	; 255
 432:	68 8d       	ldd	r22, Y+24	; 0x18
 434:	79 8d       	ldd	r23, Y+25	; 0x19
 436:	ce 01       	movw	r24, r28
 438:	01 96       	adiw	r24, 0x01	; 1
 43a:	10 d0       	rcall	.+32     	; 0x45c <vfprintf>
 43c:	ef 81       	ldd	r30, Y+7	; 0x07
 43e:	f8 85       	ldd	r31, Y+8	; 0x08
 440:	e0 0f       	add	r30, r16
 442:	f1 1f       	adc	r31, r17
 444:	10 82       	st	Z, r1
 446:	2e 96       	adiw	r28, 0x0e	; 14
 448:	0f b6       	in	r0, 0x3f	; 63
 44a:	f8 94       	cli
 44c:	de bf       	out	0x3e, r29	; 62
 44e:	0f be       	out	0x3f, r0	; 63
 450:	cd bf       	out	0x3d, r28	; 61
 452:	df 91       	pop	r29
 454:	cf 91       	pop	r28
 456:	1f 91       	pop	r17
 458:	0f 91       	pop	r16
 45a:	08 95       	ret

0000045c <vfprintf>:
 45c:	2f 92       	push	r2
 45e:	3f 92       	push	r3
 460:	4f 92       	push	r4
 462:	5f 92       	push	r5
 464:	6f 92       	push	r6
 466:	7f 92       	push	r7
 468:	8f 92       	push	r8
 46a:	9f 92       	push	r9
 46c:	af 92       	push	r10
 46e:	bf 92       	push	r11
 470:	cf 92       	push	r12
 472:	df 92       	push	r13
 474:	ef 92       	push	r14
 476:	ff 92       	push	r15
 478:	0f 93       	push	r16
 47a:	1f 93       	push	r17
 47c:	cf 93       	push	r28
 47e:	df 93       	push	r29
 480:	cd b7       	in	r28, 0x3d	; 61
 482:	de b7       	in	r29, 0x3e	; 62
 484:	2b 97       	sbiw	r28, 0x0b	; 11
 486:	0f b6       	in	r0, 0x3f	; 63
 488:	f8 94       	cli
 48a:	de bf       	out	0x3e, r29	; 62
 48c:	0f be       	out	0x3f, r0	; 63
 48e:	cd bf       	out	0x3d, r28	; 61
 490:	6c 01       	movw	r12, r24
 492:	7b 01       	movw	r14, r22
 494:	8a 01       	movw	r16, r20
 496:	fc 01       	movw	r30, r24
 498:	17 82       	std	Z+7, r1	; 0x07
 49a:	16 82       	std	Z+6, r1	; 0x06
 49c:	83 81       	ldd	r24, Z+3	; 0x03
 49e:	81 ff       	sbrs	r24, 1
 4a0:	bf c1       	rjmp	.+894    	; 0x820 <vfprintf+0x3c4>
 4a2:	ce 01       	movw	r24, r28
 4a4:	01 96       	adiw	r24, 0x01	; 1
 4a6:	3c 01       	movw	r6, r24
 4a8:	f6 01       	movw	r30, r12
 4aa:	93 81       	ldd	r25, Z+3	; 0x03
 4ac:	f7 01       	movw	r30, r14
 4ae:	93 fd       	sbrc	r25, 3
 4b0:	85 91       	lpm	r24, Z+
 4b2:	93 ff       	sbrs	r25, 3
 4b4:	81 91       	ld	r24, Z+
 4b6:	7f 01       	movw	r14, r30
 4b8:	88 23       	and	r24, r24
 4ba:	09 f4       	brne	.+2      	; 0x4be <vfprintf+0x62>
 4bc:	ad c1       	rjmp	.+858    	; 0x818 <vfprintf+0x3bc>
 4be:	85 32       	cpi	r24, 0x25	; 37
 4c0:	39 f4       	brne	.+14     	; 0x4d0 <vfprintf+0x74>
 4c2:	93 fd       	sbrc	r25, 3
 4c4:	85 91       	lpm	r24, Z+
 4c6:	93 ff       	sbrs	r25, 3
 4c8:	81 91       	ld	r24, Z+
 4ca:	7f 01       	movw	r14, r30
 4cc:	85 32       	cpi	r24, 0x25	; 37
 4ce:	21 f4       	brne	.+8      	; 0x4d8 <vfprintf+0x7c>
 4d0:	b6 01       	movw	r22, r12
 4d2:	90 e0       	ldi	r25, 0x00	; 0
 4d4:	d6 d1       	rcall	.+940    	; 0x882 <fputc>
 4d6:	e8 cf       	rjmp	.-48     	; 0x4a8 <vfprintf+0x4c>
 4d8:	91 2c       	mov	r9, r1
 4da:	21 2c       	mov	r2, r1
 4dc:	31 2c       	mov	r3, r1
 4de:	ff e1       	ldi	r31, 0x1F	; 31
 4e0:	f3 15       	cp	r31, r3
 4e2:	d8 f0       	brcs	.+54     	; 0x51a <vfprintf+0xbe>
 4e4:	8b 32       	cpi	r24, 0x2B	; 43
 4e6:	79 f0       	breq	.+30     	; 0x506 <vfprintf+0xaa>
 4e8:	38 f4       	brcc	.+14     	; 0x4f8 <vfprintf+0x9c>
 4ea:	80 32       	cpi	r24, 0x20	; 32
 4ec:	79 f0       	breq	.+30     	; 0x50c <vfprintf+0xb0>
 4ee:	83 32       	cpi	r24, 0x23	; 35
 4f0:	a1 f4       	brne	.+40     	; 0x51a <vfprintf+0xbe>
 4f2:	23 2d       	mov	r18, r3
 4f4:	20 61       	ori	r18, 0x10	; 16
 4f6:	1d c0       	rjmp	.+58     	; 0x532 <vfprintf+0xd6>
 4f8:	8d 32       	cpi	r24, 0x2D	; 45
 4fa:	61 f0       	breq	.+24     	; 0x514 <vfprintf+0xb8>
 4fc:	80 33       	cpi	r24, 0x30	; 48
 4fe:	69 f4       	brne	.+26     	; 0x51a <vfprintf+0xbe>
 500:	23 2d       	mov	r18, r3
 502:	21 60       	ori	r18, 0x01	; 1
 504:	16 c0       	rjmp	.+44     	; 0x532 <vfprintf+0xd6>
 506:	83 2d       	mov	r24, r3
 508:	82 60       	ori	r24, 0x02	; 2
 50a:	38 2e       	mov	r3, r24
 50c:	e3 2d       	mov	r30, r3
 50e:	e4 60       	ori	r30, 0x04	; 4
 510:	3e 2e       	mov	r3, r30
 512:	2a c0       	rjmp	.+84     	; 0x568 <vfprintf+0x10c>
 514:	f3 2d       	mov	r31, r3
 516:	f8 60       	ori	r31, 0x08	; 8
 518:	1d c0       	rjmp	.+58     	; 0x554 <vfprintf+0xf8>
 51a:	37 fc       	sbrc	r3, 7
 51c:	2d c0       	rjmp	.+90     	; 0x578 <vfprintf+0x11c>
 51e:	20 ed       	ldi	r18, 0xD0	; 208
 520:	28 0f       	add	r18, r24
 522:	2a 30       	cpi	r18, 0x0A	; 10
 524:	40 f0       	brcs	.+16     	; 0x536 <vfprintf+0xda>
 526:	8e 32       	cpi	r24, 0x2E	; 46
 528:	b9 f4       	brne	.+46     	; 0x558 <vfprintf+0xfc>
 52a:	36 fc       	sbrc	r3, 6
 52c:	75 c1       	rjmp	.+746    	; 0x818 <vfprintf+0x3bc>
 52e:	23 2d       	mov	r18, r3
 530:	20 64       	ori	r18, 0x40	; 64
 532:	32 2e       	mov	r3, r18
 534:	19 c0       	rjmp	.+50     	; 0x568 <vfprintf+0x10c>
 536:	36 fe       	sbrs	r3, 6
 538:	06 c0       	rjmp	.+12     	; 0x546 <vfprintf+0xea>
 53a:	8a e0       	ldi	r24, 0x0A	; 10
 53c:	98 9e       	mul	r9, r24
 53e:	20 0d       	add	r18, r0
 540:	11 24       	eor	r1, r1
 542:	92 2e       	mov	r9, r18
 544:	11 c0       	rjmp	.+34     	; 0x568 <vfprintf+0x10c>
 546:	ea e0       	ldi	r30, 0x0A	; 10
 548:	2e 9e       	mul	r2, r30
 54a:	20 0d       	add	r18, r0
 54c:	11 24       	eor	r1, r1
 54e:	22 2e       	mov	r2, r18
 550:	f3 2d       	mov	r31, r3
 552:	f0 62       	ori	r31, 0x20	; 32
 554:	3f 2e       	mov	r3, r31
 556:	08 c0       	rjmp	.+16     	; 0x568 <vfprintf+0x10c>
 558:	8c 36       	cpi	r24, 0x6C	; 108
 55a:	21 f4       	brne	.+8      	; 0x564 <vfprintf+0x108>
 55c:	83 2d       	mov	r24, r3
 55e:	80 68       	ori	r24, 0x80	; 128
 560:	38 2e       	mov	r3, r24
 562:	02 c0       	rjmp	.+4      	; 0x568 <vfprintf+0x10c>
 564:	88 36       	cpi	r24, 0x68	; 104
 566:	41 f4       	brne	.+16     	; 0x578 <vfprintf+0x11c>
 568:	f7 01       	movw	r30, r14
 56a:	93 fd       	sbrc	r25, 3
 56c:	85 91       	lpm	r24, Z+
 56e:	93 ff       	sbrs	r25, 3
 570:	81 91       	ld	r24, Z+
 572:	7f 01       	movw	r14, r30
 574:	81 11       	cpse	r24, r1
 576:	b3 cf       	rjmp	.-154    	; 0x4de <vfprintf+0x82>
 578:	98 2f       	mov	r25, r24
 57a:	9f 7d       	andi	r25, 0xDF	; 223
 57c:	95 54       	subi	r25, 0x45	; 69
 57e:	93 30       	cpi	r25, 0x03	; 3
 580:	28 f4       	brcc	.+10     	; 0x58c <vfprintf+0x130>
 582:	0c 5f       	subi	r16, 0xFC	; 252
 584:	1f 4f       	sbci	r17, 0xFF	; 255
 586:	9f e3       	ldi	r25, 0x3F	; 63
 588:	99 83       	std	Y+1, r25	; 0x01
 58a:	0d c0       	rjmp	.+26     	; 0x5a6 <vfprintf+0x14a>
 58c:	83 36       	cpi	r24, 0x63	; 99
 58e:	31 f0       	breq	.+12     	; 0x59c <vfprintf+0x140>
 590:	83 37       	cpi	r24, 0x73	; 115
 592:	71 f0       	breq	.+28     	; 0x5b0 <vfprintf+0x154>
 594:	83 35       	cpi	r24, 0x53	; 83
 596:	09 f0       	breq	.+2      	; 0x59a <vfprintf+0x13e>
 598:	55 c0       	rjmp	.+170    	; 0x644 <vfprintf+0x1e8>
 59a:	20 c0       	rjmp	.+64     	; 0x5dc <vfprintf+0x180>
 59c:	f8 01       	movw	r30, r16
 59e:	80 81       	ld	r24, Z
 5a0:	89 83       	std	Y+1, r24	; 0x01
 5a2:	0e 5f       	subi	r16, 0xFE	; 254
 5a4:	1f 4f       	sbci	r17, 0xFF	; 255
 5a6:	88 24       	eor	r8, r8
 5a8:	83 94       	inc	r8
 5aa:	91 2c       	mov	r9, r1
 5ac:	53 01       	movw	r10, r6
 5ae:	12 c0       	rjmp	.+36     	; 0x5d4 <vfprintf+0x178>
 5b0:	28 01       	movw	r4, r16
 5b2:	f2 e0       	ldi	r31, 0x02	; 2
 5b4:	4f 0e       	add	r4, r31
 5b6:	51 1c       	adc	r5, r1
 5b8:	f8 01       	movw	r30, r16
 5ba:	a0 80       	ld	r10, Z
 5bc:	b1 80       	ldd	r11, Z+1	; 0x01
 5be:	36 fe       	sbrs	r3, 6
 5c0:	03 c0       	rjmp	.+6      	; 0x5c8 <vfprintf+0x16c>
 5c2:	69 2d       	mov	r22, r9
 5c4:	70 e0       	ldi	r23, 0x00	; 0
 5c6:	02 c0       	rjmp	.+4      	; 0x5cc <vfprintf+0x170>
 5c8:	6f ef       	ldi	r22, 0xFF	; 255
 5ca:	7f ef       	ldi	r23, 0xFF	; 255
 5cc:	c5 01       	movw	r24, r10
 5ce:	4e d1       	rcall	.+668    	; 0x86c <strnlen>
 5d0:	4c 01       	movw	r8, r24
 5d2:	82 01       	movw	r16, r4
 5d4:	f3 2d       	mov	r31, r3
 5d6:	ff 77       	andi	r31, 0x7F	; 127
 5d8:	3f 2e       	mov	r3, r31
 5da:	15 c0       	rjmp	.+42     	; 0x606 <vfprintf+0x1aa>
 5dc:	28 01       	movw	r4, r16
 5de:	22 e0       	ldi	r18, 0x02	; 2
 5e0:	42 0e       	add	r4, r18
 5e2:	51 1c       	adc	r5, r1
 5e4:	f8 01       	movw	r30, r16
 5e6:	a0 80       	ld	r10, Z
 5e8:	b1 80       	ldd	r11, Z+1	; 0x01
 5ea:	36 fe       	sbrs	r3, 6
 5ec:	03 c0       	rjmp	.+6      	; 0x5f4 <vfprintf+0x198>
 5ee:	69 2d       	mov	r22, r9
 5f0:	70 e0       	ldi	r23, 0x00	; 0
 5f2:	02 c0       	rjmp	.+4      	; 0x5f8 <vfprintf+0x19c>
 5f4:	6f ef       	ldi	r22, 0xFF	; 255
 5f6:	7f ef       	ldi	r23, 0xFF	; 255
 5f8:	c5 01       	movw	r24, r10
 5fa:	2d d1       	rcall	.+602    	; 0x856 <strnlen_P>
 5fc:	4c 01       	movw	r8, r24
 5fe:	f3 2d       	mov	r31, r3
 600:	f0 68       	ori	r31, 0x80	; 128
 602:	3f 2e       	mov	r3, r31
 604:	82 01       	movw	r16, r4
 606:	33 fc       	sbrc	r3, 3
 608:	19 c0       	rjmp	.+50     	; 0x63c <vfprintf+0x1e0>
 60a:	82 2d       	mov	r24, r2
 60c:	90 e0       	ldi	r25, 0x00	; 0
 60e:	88 16       	cp	r8, r24
 610:	99 06       	cpc	r9, r25
 612:	a0 f4       	brcc	.+40     	; 0x63c <vfprintf+0x1e0>
 614:	b6 01       	movw	r22, r12
 616:	80 e2       	ldi	r24, 0x20	; 32
 618:	90 e0       	ldi	r25, 0x00	; 0
 61a:	33 d1       	rcall	.+614    	; 0x882 <fputc>
 61c:	2a 94       	dec	r2
 61e:	f5 cf       	rjmp	.-22     	; 0x60a <vfprintf+0x1ae>
 620:	f5 01       	movw	r30, r10
 622:	37 fc       	sbrc	r3, 7
 624:	85 91       	lpm	r24, Z+
 626:	37 fe       	sbrs	r3, 7
 628:	81 91       	ld	r24, Z+
 62a:	5f 01       	movw	r10, r30
 62c:	b6 01       	movw	r22, r12
 62e:	90 e0       	ldi	r25, 0x00	; 0
 630:	28 d1       	rcall	.+592    	; 0x882 <fputc>
 632:	21 10       	cpse	r2, r1
 634:	2a 94       	dec	r2
 636:	21 e0       	ldi	r18, 0x01	; 1
 638:	82 1a       	sub	r8, r18
 63a:	91 08       	sbc	r9, r1
 63c:	81 14       	cp	r8, r1
 63e:	91 04       	cpc	r9, r1
 640:	79 f7       	brne	.-34     	; 0x620 <vfprintf+0x1c4>
 642:	e1 c0       	rjmp	.+450    	; 0x806 <vfprintf+0x3aa>
 644:	84 36       	cpi	r24, 0x64	; 100
 646:	11 f0       	breq	.+4      	; 0x64c <vfprintf+0x1f0>
 648:	89 36       	cpi	r24, 0x69	; 105
 64a:	39 f5       	brne	.+78     	; 0x69a <vfprintf+0x23e>
 64c:	f8 01       	movw	r30, r16
 64e:	37 fe       	sbrs	r3, 7
 650:	07 c0       	rjmp	.+14     	; 0x660 <vfprintf+0x204>
 652:	60 81       	ld	r22, Z
 654:	71 81       	ldd	r23, Z+1	; 0x01
 656:	82 81       	ldd	r24, Z+2	; 0x02
 658:	93 81       	ldd	r25, Z+3	; 0x03
 65a:	0c 5f       	subi	r16, 0xFC	; 252
 65c:	1f 4f       	sbci	r17, 0xFF	; 255
 65e:	08 c0       	rjmp	.+16     	; 0x670 <vfprintf+0x214>
 660:	60 81       	ld	r22, Z
 662:	71 81       	ldd	r23, Z+1	; 0x01
 664:	07 2e       	mov	r0, r23
 666:	00 0c       	add	r0, r0
 668:	88 0b       	sbc	r24, r24
 66a:	99 0b       	sbc	r25, r25
 66c:	0e 5f       	subi	r16, 0xFE	; 254
 66e:	1f 4f       	sbci	r17, 0xFF	; 255
 670:	f3 2d       	mov	r31, r3
 672:	ff 76       	andi	r31, 0x6F	; 111
 674:	3f 2e       	mov	r3, r31
 676:	97 ff       	sbrs	r25, 7
 678:	09 c0       	rjmp	.+18     	; 0x68c <vfprintf+0x230>
 67a:	90 95       	com	r25
 67c:	80 95       	com	r24
 67e:	70 95       	com	r23
 680:	61 95       	neg	r22
 682:	7f 4f       	sbci	r23, 0xFF	; 255
 684:	8f 4f       	sbci	r24, 0xFF	; 255
 686:	9f 4f       	sbci	r25, 0xFF	; 255
 688:	f0 68       	ori	r31, 0x80	; 128
 68a:	3f 2e       	mov	r3, r31
 68c:	2a e0       	ldi	r18, 0x0A	; 10
 68e:	30 e0       	ldi	r19, 0x00	; 0
 690:	a3 01       	movw	r20, r6
 692:	33 d1       	rcall	.+614    	; 0x8fa <__ultoa_invert>
 694:	88 2e       	mov	r8, r24
 696:	86 18       	sub	r8, r6
 698:	44 c0       	rjmp	.+136    	; 0x722 <vfprintf+0x2c6>
 69a:	85 37       	cpi	r24, 0x75	; 117
 69c:	31 f4       	brne	.+12     	; 0x6aa <vfprintf+0x24e>
 69e:	23 2d       	mov	r18, r3
 6a0:	2f 7e       	andi	r18, 0xEF	; 239
 6a2:	b2 2e       	mov	r11, r18
 6a4:	2a e0       	ldi	r18, 0x0A	; 10
 6a6:	30 e0       	ldi	r19, 0x00	; 0
 6a8:	25 c0       	rjmp	.+74     	; 0x6f4 <vfprintf+0x298>
 6aa:	93 2d       	mov	r25, r3
 6ac:	99 7f       	andi	r25, 0xF9	; 249
 6ae:	b9 2e       	mov	r11, r25
 6b0:	8f 36       	cpi	r24, 0x6F	; 111
 6b2:	c1 f0       	breq	.+48     	; 0x6e4 <vfprintf+0x288>
 6b4:	18 f4       	brcc	.+6      	; 0x6bc <vfprintf+0x260>
 6b6:	88 35       	cpi	r24, 0x58	; 88
 6b8:	79 f0       	breq	.+30     	; 0x6d8 <vfprintf+0x27c>
 6ba:	ae c0       	rjmp	.+348    	; 0x818 <vfprintf+0x3bc>
 6bc:	80 37       	cpi	r24, 0x70	; 112
 6be:	19 f0       	breq	.+6      	; 0x6c6 <vfprintf+0x26a>
 6c0:	88 37       	cpi	r24, 0x78	; 120
 6c2:	21 f0       	breq	.+8      	; 0x6cc <vfprintf+0x270>
 6c4:	a9 c0       	rjmp	.+338    	; 0x818 <vfprintf+0x3bc>
 6c6:	e9 2f       	mov	r30, r25
 6c8:	e0 61       	ori	r30, 0x10	; 16
 6ca:	be 2e       	mov	r11, r30
 6cc:	b4 fe       	sbrs	r11, 4
 6ce:	0d c0       	rjmp	.+26     	; 0x6ea <vfprintf+0x28e>
 6d0:	fb 2d       	mov	r31, r11
 6d2:	f4 60       	ori	r31, 0x04	; 4
 6d4:	bf 2e       	mov	r11, r31
 6d6:	09 c0       	rjmp	.+18     	; 0x6ea <vfprintf+0x28e>
 6d8:	34 fe       	sbrs	r3, 4
 6da:	0a c0       	rjmp	.+20     	; 0x6f0 <vfprintf+0x294>
 6dc:	29 2f       	mov	r18, r25
 6de:	26 60       	ori	r18, 0x06	; 6
 6e0:	b2 2e       	mov	r11, r18
 6e2:	06 c0       	rjmp	.+12     	; 0x6f0 <vfprintf+0x294>
 6e4:	28 e0       	ldi	r18, 0x08	; 8
 6e6:	30 e0       	ldi	r19, 0x00	; 0
 6e8:	05 c0       	rjmp	.+10     	; 0x6f4 <vfprintf+0x298>
 6ea:	20 e1       	ldi	r18, 0x10	; 16
 6ec:	30 e0       	ldi	r19, 0x00	; 0
 6ee:	02 c0       	rjmp	.+4      	; 0x6f4 <vfprintf+0x298>
 6f0:	20 e1       	ldi	r18, 0x10	; 16
 6f2:	32 e0       	ldi	r19, 0x02	; 2
 6f4:	f8 01       	movw	r30, r16
 6f6:	b7 fe       	sbrs	r11, 7
 6f8:	07 c0       	rjmp	.+14     	; 0x708 <vfprintf+0x2ac>
 6fa:	60 81       	ld	r22, Z
 6fc:	71 81       	ldd	r23, Z+1	; 0x01
 6fe:	82 81       	ldd	r24, Z+2	; 0x02
 700:	93 81       	ldd	r25, Z+3	; 0x03
 702:	0c 5f       	subi	r16, 0xFC	; 252
 704:	1f 4f       	sbci	r17, 0xFF	; 255
 706:	06 c0       	rjmp	.+12     	; 0x714 <vfprintf+0x2b8>
 708:	60 81       	ld	r22, Z
 70a:	71 81       	ldd	r23, Z+1	; 0x01
 70c:	80 e0       	ldi	r24, 0x00	; 0
 70e:	90 e0       	ldi	r25, 0x00	; 0
 710:	0e 5f       	subi	r16, 0xFE	; 254
 712:	1f 4f       	sbci	r17, 0xFF	; 255
 714:	a3 01       	movw	r20, r6
 716:	f1 d0       	rcall	.+482    	; 0x8fa <__ultoa_invert>
 718:	88 2e       	mov	r8, r24
 71a:	86 18       	sub	r8, r6
 71c:	fb 2d       	mov	r31, r11
 71e:	ff 77       	andi	r31, 0x7F	; 127
 720:	3f 2e       	mov	r3, r31
 722:	36 fe       	sbrs	r3, 6
 724:	0d c0       	rjmp	.+26     	; 0x740 <vfprintf+0x2e4>
 726:	23 2d       	mov	r18, r3
 728:	2e 7f       	andi	r18, 0xFE	; 254
 72a:	a2 2e       	mov	r10, r18
 72c:	89 14       	cp	r8, r9
 72e:	58 f4       	brcc	.+22     	; 0x746 <vfprintf+0x2ea>
 730:	34 fe       	sbrs	r3, 4
 732:	0b c0       	rjmp	.+22     	; 0x74a <vfprintf+0x2ee>
 734:	32 fc       	sbrc	r3, 2
 736:	09 c0       	rjmp	.+18     	; 0x74a <vfprintf+0x2ee>
 738:	83 2d       	mov	r24, r3
 73a:	8e 7e       	andi	r24, 0xEE	; 238
 73c:	a8 2e       	mov	r10, r24
 73e:	05 c0       	rjmp	.+10     	; 0x74a <vfprintf+0x2ee>
 740:	b8 2c       	mov	r11, r8
 742:	a3 2c       	mov	r10, r3
 744:	03 c0       	rjmp	.+6      	; 0x74c <vfprintf+0x2f0>
 746:	b8 2c       	mov	r11, r8
 748:	01 c0       	rjmp	.+2      	; 0x74c <vfprintf+0x2f0>
 74a:	b9 2c       	mov	r11, r9
 74c:	a4 fe       	sbrs	r10, 4
 74e:	0f c0       	rjmp	.+30     	; 0x76e <vfprintf+0x312>
 750:	fe 01       	movw	r30, r28
 752:	e8 0d       	add	r30, r8
 754:	f1 1d       	adc	r31, r1
 756:	80 81       	ld	r24, Z
 758:	80 33       	cpi	r24, 0x30	; 48
 75a:	21 f4       	brne	.+8      	; 0x764 <vfprintf+0x308>
 75c:	9a 2d       	mov	r25, r10
 75e:	99 7e       	andi	r25, 0xE9	; 233
 760:	a9 2e       	mov	r10, r25
 762:	09 c0       	rjmp	.+18     	; 0x776 <vfprintf+0x31a>
 764:	a2 fe       	sbrs	r10, 2
 766:	06 c0       	rjmp	.+12     	; 0x774 <vfprintf+0x318>
 768:	b3 94       	inc	r11
 76a:	b3 94       	inc	r11
 76c:	04 c0       	rjmp	.+8      	; 0x776 <vfprintf+0x31a>
 76e:	8a 2d       	mov	r24, r10
 770:	86 78       	andi	r24, 0x86	; 134
 772:	09 f0       	breq	.+2      	; 0x776 <vfprintf+0x31a>
 774:	b3 94       	inc	r11
 776:	a3 fc       	sbrc	r10, 3
 778:	10 c0       	rjmp	.+32     	; 0x79a <vfprintf+0x33e>
 77a:	a0 fe       	sbrs	r10, 0
 77c:	06 c0       	rjmp	.+12     	; 0x78a <vfprintf+0x32e>
 77e:	b2 14       	cp	r11, r2
 780:	80 f4       	brcc	.+32     	; 0x7a2 <vfprintf+0x346>
 782:	28 0c       	add	r2, r8
 784:	92 2c       	mov	r9, r2
 786:	9b 18       	sub	r9, r11
 788:	0d c0       	rjmp	.+26     	; 0x7a4 <vfprintf+0x348>
 78a:	b2 14       	cp	r11, r2
 78c:	58 f4       	brcc	.+22     	; 0x7a4 <vfprintf+0x348>
 78e:	b6 01       	movw	r22, r12
 790:	80 e2       	ldi	r24, 0x20	; 32
 792:	90 e0       	ldi	r25, 0x00	; 0
 794:	76 d0       	rcall	.+236    	; 0x882 <fputc>
 796:	b3 94       	inc	r11
 798:	f8 cf       	rjmp	.-16     	; 0x78a <vfprintf+0x32e>
 79a:	b2 14       	cp	r11, r2
 79c:	18 f4       	brcc	.+6      	; 0x7a4 <vfprintf+0x348>
 79e:	2b 18       	sub	r2, r11
 7a0:	02 c0       	rjmp	.+4      	; 0x7a6 <vfprintf+0x34a>
 7a2:	98 2c       	mov	r9, r8
 7a4:	21 2c       	mov	r2, r1
 7a6:	a4 fe       	sbrs	r10, 4
 7a8:	0f c0       	rjmp	.+30     	; 0x7c8 <vfprintf+0x36c>
 7aa:	b6 01       	movw	r22, r12
 7ac:	80 e3       	ldi	r24, 0x30	; 48
 7ae:	90 e0       	ldi	r25, 0x00	; 0
 7b0:	68 d0       	rcall	.+208    	; 0x882 <fputc>
 7b2:	a2 fe       	sbrs	r10, 2
 7b4:	16 c0       	rjmp	.+44     	; 0x7e2 <vfprintf+0x386>
 7b6:	a1 fc       	sbrc	r10, 1
 7b8:	03 c0       	rjmp	.+6      	; 0x7c0 <vfprintf+0x364>
 7ba:	88 e7       	ldi	r24, 0x78	; 120
 7bc:	90 e0       	ldi	r25, 0x00	; 0
 7be:	02 c0       	rjmp	.+4      	; 0x7c4 <vfprintf+0x368>
 7c0:	88 e5       	ldi	r24, 0x58	; 88
 7c2:	90 e0       	ldi	r25, 0x00	; 0
 7c4:	b6 01       	movw	r22, r12
 7c6:	0c c0       	rjmp	.+24     	; 0x7e0 <vfprintf+0x384>
 7c8:	8a 2d       	mov	r24, r10
 7ca:	86 78       	andi	r24, 0x86	; 134
 7cc:	51 f0       	breq	.+20     	; 0x7e2 <vfprintf+0x386>
 7ce:	a1 fe       	sbrs	r10, 1
 7d0:	02 c0       	rjmp	.+4      	; 0x7d6 <vfprintf+0x37a>
 7d2:	8b e2       	ldi	r24, 0x2B	; 43
 7d4:	01 c0       	rjmp	.+2      	; 0x7d8 <vfprintf+0x37c>
 7d6:	80 e2       	ldi	r24, 0x20	; 32
 7d8:	a7 fc       	sbrc	r10, 7
 7da:	8d e2       	ldi	r24, 0x2D	; 45
 7dc:	b6 01       	movw	r22, r12
 7de:	90 e0       	ldi	r25, 0x00	; 0
 7e0:	50 d0       	rcall	.+160    	; 0x882 <fputc>
 7e2:	89 14       	cp	r8, r9
 7e4:	30 f4       	brcc	.+12     	; 0x7f2 <vfprintf+0x396>
 7e6:	b6 01       	movw	r22, r12
 7e8:	80 e3       	ldi	r24, 0x30	; 48
 7ea:	90 e0       	ldi	r25, 0x00	; 0
 7ec:	4a d0       	rcall	.+148    	; 0x882 <fputc>
 7ee:	9a 94       	dec	r9
 7f0:	f8 cf       	rjmp	.-16     	; 0x7e2 <vfprintf+0x386>
 7f2:	8a 94       	dec	r8
 7f4:	f3 01       	movw	r30, r6
 7f6:	e8 0d       	add	r30, r8
 7f8:	f1 1d       	adc	r31, r1
 7fa:	80 81       	ld	r24, Z
 7fc:	b6 01       	movw	r22, r12
 7fe:	90 e0       	ldi	r25, 0x00	; 0
 800:	40 d0       	rcall	.+128    	; 0x882 <fputc>
 802:	81 10       	cpse	r8, r1
 804:	f6 cf       	rjmp	.-20     	; 0x7f2 <vfprintf+0x396>
 806:	22 20       	and	r2, r2
 808:	09 f4       	brne	.+2      	; 0x80c <vfprintf+0x3b0>
 80a:	4e ce       	rjmp	.-868    	; 0x4a8 <vfprintf+0x4c>
 80c:	b6 01       	movw	r22, r12
 80e:	80 e2       	ldi	r24, 0x20	; 32
 810:	90 e0       	ldi	r25, 0x00	; 0
 812:	37 d0       	rcall	.+110    	; 0x882 <fputc>
 814:	2a 94       	dec	r2
 816:	f7 cf       	rjmp	.-18     	; 0x806 <vfprintf+0x3aa>
 818:	f6 01       	movw	r30, r12
 81a:	86 81       	ldd	r24, Z+6	; 0x06
 81c:	97 81       	ldd	r25, Z+7	; 0x07
 81e:	02 c0       	rjmp	.+4      	; 0x824 <vfprintf+0x3c8>
 820:	8f ef       	ldi	r24, 0xFF	; 255
 822:	9f ef       	ldi	r25, 0xFF	; 255
 824:	2b 96       	adiw	r28, 0x0b	; 11
 826:	0f b6       	in	r0, 0x3f	; 63
 828:	f8 94       	cli
 82a:	de bf       	out	0x3e, r29	; 62
 82c:	0f be       	out	0x3f, r0	; 63
 82e:	cd bf       	out	0x3d, r28	; 61
 830:	df 91       	pop	r29
 832:	cf 91       	pop	r28
 834:	1f 91       	pop	r17
 836:	0f 91       	pop	r16
 838:	ff 90       	pop	r15
 83a:	ef 90       	pop	r14
 83c:	df 90       	pop	r13
 83e:	cf 90       	pop	r12
 840:	bf 90       	pop	r11
 842:	af 90       	pop	r10
 844:	9f 90       	pop	r9
 846:	8f 90       	pop	r8
 848:	7f 90       	pop	r7
 84a:	6f 90       	pop	r6
 84c:	5f 90       	pop	r5
 84e:	4f 90       	pop	r4
 850:	3f 90       	pop	r3
 852:	2f 90       	pop	r2
 854:	08 95       	ret

00000856 <strnlen_P>:
 856:	fc 01       	movw	r30, r24
 858:	05 90       	lpm	r0, Z+
 85a:	61 50       	subi	r22, 0x01	; 1
 85c:	70 40       	sbci	r23, 0x00	; 0
 85e:	01 10       	cpse	r0, r1
 860:	d8 f7       	brcc	.-10     	; 0x858 <strnlen_P+0x2>
 862:	80 95       	com	r24
 864:	90 95       	com	r25
 866:	8e 0f       	add	r24, r30
 868:	9f 1f       	adc	r25, r31
 86a:	08 95       	ret

0000086c <strnlen>:
 86c:	fc 01       	movw	r30, r24
 86e:	61 50       	subi	r22, 0x01	; 1
 870:	70 40       	sbci	r23, 0x00	; 0
 872:	01 90       	ld	r0, Z+
 874:	01 10       	cpse	r0, r1
 876:	d8 f7       	brcc	.-10     	; 0x86e <strnlen+0x2>
 878:	80 95       	com	r24
 87a:	90 95       	com	r25
 87c:	8e 0f       	add	r24, r30
 87e:	9f 1f       	adc	r25, r31
 880:	08 95       	ret

00000882 <fputc>:
 882:	0f 93       	push	r16
 884:	1f 93       	push	r17
 886:	cf 93       	push	r28
 888:	df 93       	push	r29
 88a:	fb 01       	movw	r30, r22
 88c:	23 81       	ldd	r18, Z+3	; 0x03
 88e:	21 fd       	sbrc	r18, 1
 890:	03 c0       	rjmp	.+6      	; 0x898 <fputc+0x16>
 892:	8f ef       	ldi	r24, 0xFF	; 255
 894:	9f ef       	ldi	r25, 0xFF	; 255
 896:	2c c0       	rjmp	.+88     	; 0x8f0 <fputc+0x6e>
 898:	22 ff       	sbrs	r18, 2
 89a:	16 c0       	rjmp	.+44     	; 0x8c8 <fputc+0x46>
 89c:	46 81       	ldd	r20, Z+6	; 0x06
 89e:	57 81       	ldd	r21, Z+7	; 0x07
 8a0:	24 81       	ldd	r18, Z+4	; 0x04
 8a2:	35 81       	ldd	r19, Z+5	; 0x05
 8a4:	42 17       	cp	r20, r18
 8a6:	53 07       	cpc	r21, r19
 8a8:	44 f4       	brge	.+16     	; 0x8ba <fputc+0x38>
 8aa:	a0 81       	ld	r26, Z
 8ac:	b1 81       	ldd	r27, Z+1	; 0x01
 8ae:	9d 01       	movw	r18, r26
 8b0:	2f 5f       	subi	r18, 0xFF	; 255
 8b2:	3f 4f       	sbci	r19, 0xFF	; 255
 8b4:	31 83       	std	Z+1, r19	; 0x01
 8b6:	20 83       	st	Z, r18
 8b8:	8c 93       	st	X, r24
 8ba:	26 81       	ldd	r18, Z+6	; 0x06
 8bc:	37 81       	ldd	r19, Z+7	; 0x07
 8be:	2f 5f       	subi	r18, 0xFF	; 255
 8c0:	3f 4f       	sbci	r19, 0xFF	; 255
 8c2:	37 83       	std	Z+7, r19	; 0x07
 8c4:	26 83       	std	Z+6, r18	; 0x06
 8c6:	14 c0       	rjmp	.+40     	; 0x8f0 <fputc+0x6e>
 8c8:	8b 01       	movw	r16, r22
 8ca:	ec 01       	movw	r28, r24
 8cc:	fb 01       	movw	r30, r22
 8ce:	00 84       	ldd	r0, Z+8	; 0x08
 8d0:	f1 85       	ldd	r31, Z+9	; 0x09
 8d2:	e0 2d       	mov	r30, r0
 8d4:	19 95       	eicall
 8d6:	89 2b       	or	r24, r25
 8d8:	e1 f6       	brne	.-72     	; 0x892 <fputc+0x10>
 8da:	d8 01       	movw	r26, r16
 8dc:	16 96       	adiw	r26, 0x06	; 6
 8de:	8d 91       	ld	r24, X+
 8e0:	9c 91       	ld	r25, X
 8e2:	17 97       	sbiw	r26, 0x07	; 7
 8e4:	01 96       	adiw	r24, 0x01	; 1
 8e6:	17 96       	adiw	r26, 0x07	; 7
 8e8:	9c 93       	st	X, r25
 8ea:	8e 93       	st	-X, r24
 8ec:	16 97       	sbiw	r26, 0x06	; 6
 8ee:	ce 01       	movw	r24, r28
 8f0:	df 91       	pop	r29
 8f2:	cf 91       	pop	r28
 8f4:	1f 91       	pop	r17
 8f6:	0f 91       	pop	r16
 8f8:	08 95       	ret

000008fa <__ultoa_invert>:
 8fa:	fa 01       	movw	r30, r20
 8fc:	aa 27       	eor	r26, r26
 8fe:	28 30       	cpi	r18, 0x08	; 8
 900:	51 f1       	breq	.+84     	; 0x956 <__ultoa_invert+0x5c>
 902:	20 31       	cpi	r18, 0x10	; 16
 904:	81 f1       	breq	.+96     	; 0x966 <__ultoa_invert+0x6c>
 906:	e8 94       	clt
 908:	6f 93       	push	r22
 90a:	6e 7f       	andi	r22, 0xFE	; 254
 90c:	6e 5f       	subi	r22, 0xFE	; 254
 90e:	7f 4f       	sbci	r23, 0xFF	; 255
 910:	8f 4f       	sbci	r24, 0xFF	; 255
 912:	9f 4f       	sbci	r25, 0xFF	; 255
 914:	af 4f       	sbci	r26, 0xFF	; 255
 916:	b1 e0       	ldi	r27, 0x01	; 1
 918:	3e d0       	rcall	.+124    	; 0x996 <__ultoa_invert+0x9c>
 91a:	b4 e0       	ldi	r27, 0x04	; 4
 91c:	3c d0       	rcall	.+120    	; 0x996 <__ultoa_invert+0x9c>
 91e:	67 0f       	add	r22, r23
 920:	78 1f       	adc	r23, r24
 922:	89 1f       	adc	r24, r25
 924:	9a 1f       	adc	r25, r26
 926:	a1 1d       	adc	r26, r1
 928:	68 0f       	add	r22, r24
 92a:	79 1f       	adc	r23, r25
 92c:	8a 1f       	adc	r24, r26
 92e:	91 1d       	adc	r25, r1
 930:	a1 1d       	adc	r26, r1
 932:	6a 0f       	add	r22, r26
 934:	71 1d       	adc	r23, r1
 936:	81 1d       	adc	r24, r1
 938:	91 1d       	adc	r25, r1
 93a:	a1 1d       	adc	r26, r1
 93c:	20 d0       	rcall	.+64     	; 0x97e <__ultoa_invert+0x84>
 93e:	09 f4       	brne	.+2      	; 0x942 <__ultoa_invert+0x48>
 940:	68 94       	set
 942:	3f 91       	pop	r19
 944:	2a e0       	ldi	r18, 0x0A	; 10
 946:	26 9f       	mul	r18, r22
 948:	11 24       	eor	r1, r1
 94a:	30 19       	sub	r19, r0
 94c:	30 5d       	subi	r19, 0xD0	; 208
 94e:	31 93       	st	Z+, r19
 950:	de f6       	brtc	.-74     	; 0x908 <__ultoa_invert+0xe>
 952:	cf 01       	movw	r24, r30
 954:	08 95       	ret
 956:	46 2f       	mov	r20, r22
 958:	47 70       	andi	r20, 0x07	; 7
 95a:	40 5d       	subi	r20, 0xD0	; 208
 95c:	41 93       	st	Z+, r20
 95e:	b3 e0       	ldi	r27, 0x03	; 3
 960:	0f d0       	rcall	.+30     	; 0x980 <__ultoa_invert+0x86>
 962:	c9 f7       	brne	.-14     	; 0x956 <__ultoa_invert+0x5c>
 964:	f6 cf       	rjmp	.-20     	; 0x952 <__ultoa_invert+0x58>
 966:	46 2f       	mov	r20, r22
 968:	4f 70       	andi	r20, 0x0F	; 15
 96a:	40 5d       	subi	r20, 0xD0	; 208
 96c:	4a 33       	cpi	r20, 0x3A	; 58
 96e:	18 f0       	brcs	.+6      	; 0x976 <__ultoa_invert+0x7c>
 970:	49 5d       	subi	r20, 0xD9	; 217
 972:	31 fd       	sbrc	r19, 1
 974:	40 52       	subi	r20, 0x20	; 32
 976:	41 93       	st	Z+, r20
 978:	02 d0       	rcall	.+4      	; 0x97e <__ultoa_invert+0x84>
 97a:	a9 f7       	brne	.-22     	; 0x966 <__ultoa_invert+0x6c>
 97c:	ea cf       	rjmp	.-44     	; 0x952 <__ultoa_invert+0x58>
 97e:	b4 e0       	ldi	r27, 0x04	; 4
 980:	a6 95       	lsr	r26
 982:	97 95       	ror	r25
 984:	87 95       	ror	r24
 986:	77 95       	ror	r23
 988:	67 95       	ror	r22
 98a:	ba 95       	dec	r27
 98c:	c9 f7       	brne	.-14     	; 0x980 <__ultoa_invert+0x86>
 98e:	00 97       	sbiw	r24, 0x00	; 0
 990:	61 05       	cpc	r22, r1
 992:	71 05       	cpc	r23, r1
 994:	08 95       	ret
 996:	9b 01       	movw	r18, r22
 998:	ac 01       	movw	r20, r24
 99a:	0a 2e       	mov	r0, r26
 99c:	06 94       	lsr	r0
 99e:	57 95       	ror	r21
 9a0:	47 95       	ror	r20
 9a2:	37 95       	ror	r19
 9a4:	27 95       	ror	r18
 9a6:	ba 95       	dec	r27
 9a8:	c9 f7       	brne	.-14     	; 0x99c <__ultoa_invert+0xa2>
 9aa:	62 0f       	add	r22, r18
 9ac:	73 1f       	adc	r23, r19
 9ae:	84 1f       	adc	r24, r20
 9b0:	95 1f       	adc	r25, r21
 9b2:	a0 1d       	adc	r26, r0
 9b4:	08 95       	ret

000009b6 <_exit>:
 9b6:	f8 94       	cli

000009b8 <__stop_program>:
 9b8:	ff cf       	rjmp	.-2      	; 0x9b8 <__stop_program>
